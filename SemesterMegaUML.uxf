<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>480</x>
      <y>480</y>
      <w>184</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>IntNodeArray
--
-head : IntNode*
-size : int
--
+ IntNodeArray(int) : constructor
+getSize() : int
+ getFromIndex(int) : int
+ setAtIndex(int,int) : void
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>664</x>
      <y>272</y>
      <w>232</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>Timer
--
-executionTime : long
--
+ startTimer: void
+ stopTimer: void
+ resetTimer: void
+ displayTimerInformation: void
+ getExecutionTimeinMicroseconds: long
+Timer: void
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>456</x>
      <y>272</y>
      <w>208</w>
      <h>176</h>
    </coordinates>
    <panel_attributes>IntNode
--
-nodeData : int
-nodePointer : IntNode*

--
+getNodeData():int
+getNodePointer(): IntNode*
+setNodeData(int): void
+setNodePointer(IntNode*):void

+IntNode(): constructor
+IntNode(int) : constructor
+IntNode(int, IntNode*): constructor

fg=black
bg=pink</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>456</x>
      <y>216</y>
      <w>112</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>Created by
Geran Kunz
bg=dark_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1432</x>
      <y>216</y>
      <w>80</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>SimpleClass</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>560</x>
      <y>440</y>
      <w>40</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1..n</panel_attributes>
    <additional_attributes>10.0;50.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>664</x>
      <y>392</y>
      <w>288</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>Node&lt;Type&gt;
--
- nodeData : Type
- nodePointer : Node&lt;Type&gt; *
--
Contructors
+Node&lt;Type();
+Node&lt;Type&gt;(int);
+Node&lt;Type&gt;(int,int);
Methods
+getNodeData() : Type
+GetNodePointer() Node&lt;Type&gt; *
+setNodeData(Typ e value): void
+setNodePointer(Node&lt;Type&gt;*): void
bg=red</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>56</x>
      <y>232</y>
      <w>328</w>
      <h>304</h>
    </coordinates>
    <panel_attributes>Array&lt;Type&gt;
--
-front : Node&lt;Type&gt; *
-size : int
--
+Array() : default constructor
+Array&lt;Type&gt;(int size) : constructor
+ ~Array&lt;Type&gt;():destructor
+Array&lt;Type&gt;(const Array&lt;Type&gt; &amp;toBeCopied) : copy constructor
+getSize():int
+getFromIndex(int index) : Type
+setAtIndex(int index, Type value):void
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>176</x>
      <y>528</y>
      <w>648</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1..n</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0;790.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>0</y>
      <w>328</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>Model::List&lt;Type&gt;
-
-size : int
-front : Node&lt;Type&gt;*
-
+List&lt;Type&gt;(): constructor
+List&lt;Type&gt;(contList&lt;Type&gt; &amp;source):copy construtor
+~List &lt;Type&gt;():destructor

+ addAtIndex(int index, Type value): void
+ add(Type value): void
+ remove(int index):Type
+ setAtIndex(int index, Type data):Type
+ getFromINdex(int index): Type
+ contaion(Type data) : bool
+ getSize() const : int
+ getFront()cost: Node&lt;Type&gt;*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>168</x>
      <y>200</y>
      <w>512</w>
      <h>288</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=0..n</panel_attributes>
    <additional_attributes>10.0;10.0;320.0;10.0;320.0;330.0;620.0;330.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>400</x>
      <y>648</y>
      <w>536</w>
      <h>248</h>
    </coordinates>
    <panel_attributes>BiDirectionalNode&lt;Type&gt;
--
-nodeData : Type
-nextPointer : BiDirectionalNode&lt;Type&gt; *
-previousPointer : BiDirectionalNode&lt;Type&gt; *
--
Contructor
+BiDirectionalNode&lt;Type&gt;();
+BiDirectionalNode&lt;Type&gt;(Type data);
+BiDirectionalNOde&lt;Type&gt;(Type data, BDN&lt;Type&gt; * nextPointer,BDN&lt;Type&gt;* previousPointer)
Methods
+getNodeData():Type
+getNextPointer():BiDrectioinalNode&lt;Type&gt;*
+getPreviousPointer():BiDirectionalNode&lt;Type&gt;*
+setNodeData(Type value):void
+setNextPointer(BiDirectionNode&lt;Type&gt; newPointer): void
+setPreviousPointer(BiDirectionalNode&lt;Type&gt; newPointer): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>680</x>
      <y>592</y>
      <w>128</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>140.0;10.0;10.0;70.0</additional_attributes>
  </element>
</diagram>
