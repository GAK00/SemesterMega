<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>600</x>
      <y>600</y>
      <w>230</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>IntNodeArray
--
-head : IntNode*
-size : int
--
+ IntNodeArray(int) : constructor
+getSize() : int
+ getFromIndex(int) : int
+ setAtIndex(int,int) : void
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>830</x>
      <y>340</y>
      <w>290</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>Timer
--
-executionTime : long
--
+ startTimer: void
+ stopTimer: void
+ resetTimer: void
+ displayTimerInformation: void
+ getExecutionTimeinMicroseconds: long
+Timer: void
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>570</x>
      <y>340</y>
      <w>260</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>IntNode
--
-nodeData : int
-nodePointer : IntNode*

--
+getNodeData():int
+getNodePointer(): IntNode*
+setNodeData(int): void
+setNodePointer(IntNode*):void

+IntNode(): constructor
+IntNode(int) : constructor
+IntNode(int, IntNode*): constructor

fg=black
bg=pink</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>570</x>
      <y>270</y>
      <w>140</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>Created by
Geran Kunz
bg=dark_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>700</x>
      <y>550</y>
      <w>50</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1..n</panel_attributes>
    <additional_attributes>10.0;50.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>830</x>
      <y>490</y>
      <w>360</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>Node&lt;Type&gt;
--
- nodeData : Type
- nodePointer : Node&lt;Type&gt; *
--
Contructors
+Node&lt;Type();
+Node&lt;Type&gt;(int);
+Node&lt;Type&gt;(int,int);
Methods
+getNodeData() : Type
+GetNodePointer() Node&lt;Type&gt; *
+setNodeData(Typ e value): void
+setNodePointer(Node&lt;Type&gt;*): void
bg=red</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>70</x>
      <y>290</y>
      <w>410</w>
      <h>380</h>
    </coordinates>
    <panel_attributes>Array&lt;Type&gt;
--
-front : Node&lt;Type&gt; *
-size : int
--
+Array() : default constructor
+Array&lt;Type&gt;(int size) : constructor
+ ~Array&lt;Type&gt;():destructor
+Array&lt;Type&gt;(const Array&lt;Type&gt; &amp;toBeCopied) : copy constructor
+getSize():int
+getFromIndex(int index) : Type
+setAtIndex(int index, Type value):void
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>220</x>
      <y>660</y>
      <w>930</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1..n</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0;910.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>0</y>
      <w>410</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>Model::List&lt;Type&gt;
-
-size : int
-front : Node&lt;Type&gt;*
-
+List&lt;Type&gt;(): constructor
+List&lt;Type&gt;(contList&lt;Type&gt; &amp;source):copy construtor
+~List &lt;Type&gt;():destructor

+ addAtIndex(int index, Type value): void
+ add(Type value): void
+ remove(int index):Type
+ setAtIndex(int index, Type data):Type
+ getFromINdex(int index): Type
+ contaion(Type data) : bool
+ getSize() const : int
+ getFront()cost: Node&lt;Type&gt;*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>210</x>
      <y>250</y>
      <w>640</w>
      <h>360</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=0..n</panel_attributes>
    <additional_attributes>10.0;10.0;320.0;10.0;320.0;330.0;620.0;330.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>650</x>
      <y>750</y>
      <w>670</w>
      <h>310</h>
    </coordinates>
    <panel_attributes>BiDirectionalNode&lt;Type&gt;
--
-nodeData : Type
-nextPointer : BiDirectionalNode&lt;Type&gt; *
-previousPointer : BiDirectionalNode&lt;Type&gt; *
--
Contructor
+BiDirectionalNode&lt;Type&gt;();
+BiDirectionalNode&lt;Type&gt;(Type data);
+BiDirectionalNOde&lt;Type&gt;(Type data, BDN&lt;Type&gt; * nextPointer,BDN&lt;Type&gt;* previousPointer)
Methods
+getNodeData():Type
+getNextPointer():BiDrectioinalNode&lt;Type&gt;*
+getPreviousPointer():BiDirectionalNode&lt;Type&gt;*
+setNodeData(Type value):void
+setNextPointer(BiDirectionNode&lt;Type&gt; newPointer): void
+setPreviousPointer(BiDirectionalNode&lt;Type&gt; newPointer): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1000</x>
      <y>740</y>
      <w>130</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>110.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>610</x>
      <y>1140</y>
      <w>670</w>
      <h>320</h>
    </coordinates>
    <panel_attributes>/DoubleList&lt;Type&gt;/
--
-size : int
-front : BiDirectionalNode&lt;Type&gt; *
-end :  BiDirectionalNode&lt;Type&gt; *
--
Methods
Vitual
+getSize()const : int
+getFront()const : BiDirectionalNode&lt;Type&gt; *
+getEnd()const : BiDirectionalNode&lt;Type&gt; *
Virtual
+ add(Type value):void
+ remove(int index) : Type
bg=red
transparency=50</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1030</x>
      <y>1050</y>
      <w>30</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1240</x>
      <y>1450</y>
      <w>50</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;30.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1260</x>
      <y>1500</y>
      <w>100</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>CircleList</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>730</x>
      <y>1490</y>
      <w>100</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>Queue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>780</x>
      <y>1450</y>
      <w>80</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>60.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>960</x>
      <y>1510</y>
      <w>100</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>Stack</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>990</x>
      <y>1450</y>
      <w>60</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>40.0;10.0;10.0;60.0</additional_attributes>
  </element>
</diagram>
